[{"path":"https://rainer-rq-koelle.github.io/pru3di/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 PRU Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/articles/Data-Processing.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Data-Processing","text":"3Di algorithm defines composite “()efficiency” score flight. score composed horizontal vertical component.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/articles/Data-Processing.html","id":"data-loading-and-processing","dir":"Articles","previous_headings":"","what":"Data Loading and Processing","title":"Data-Processing","text":"Let’s load subset trajectories. Let’s pick random set trajectories plot .","code":"rq <- eidw_egll |>    standardise_traj_from_trafficlib() |>    identify_trajectory_legs() |>    make_uid()  dplyr::glimpse(rq) #> Rows: 655,693 #> Columns: 12 #> $ UID     <chr> \"010204-20230424-0-MSR761\", \"010204-20230424-0-MSR761\", \"01020… #> $ FLTID   <chr> \"MSR761\", \"MSR761\", \"MSR761\", \"MSR761\", \"MSR761\", \"MSR761\", \"M… #> $ ICAO24  <chr> \"010204\", \"010204\", \"010204\", \"010204\", \"010204\", \"010204\", \"0… #> $ TIME    <dttm> 2023-04-24 10:15:18, 2023-04-24 10:15:23, 2023-04-24 10:15:28… #> $ ALT     <dbl> 31975, 31975, 31950, 31975, 31975, 31950, 31950, 31950, 31950,… #> $ LAT     <dbl> 35.17268, 35.18198, 35.19028, 35.19933, 35.20750, 35.21644, 35… #> $ LON     <dbl> 27.35680, 27.35052, 27.34491, 27.33886, 27.33335, 27.32735, 27… #> $ FL      <dbl> 319.75, 319.75, 319.50, 319.75, 319.75, 319.50, 319.50, 319.50… #> $ SEQ_ID  <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,… #> $ STEP    <drtn> 0 secs, 5 secs, 5 secs, 5 secs, 5 secs, 5 secs, 5 secs, 5 sec… #> $ LEG     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ COM_UID <chr> \"MSR761\", \"MSR761\", \"MSR761\", \"MSR761\", \"MSR761\", \"MSR761\", \"M… set.seed(666) picks <- rq$UID |> unique() |> sample(3) picks #> [1] \"4ca92d-20230415-12-EIN1HL\" \"4cabd2-20230408-6-EIN154\"  #> [3] \"4ca9bb-20230423-8-EIN154\" library(ggplot2)  rq |> dplyr::filter(UID %in% picks) |>    ggplot() +   geom_point(aes(x = TIME, y = FL, color = FLTID)) +   theme(legend.position = \"top\") #> Warning: Removed 1 rows containing missing values (`geom_point()`)."},{"path":"https://rainer-rq-koelle.github.io/pru3di/articles/Data-Processing.html","id":"horizontal-component","dir":"Articles","previous_headings":"","what":"Horizontal Component","title":"Data-Processing","text":"calc horiz comp","code":""},{"path":[]},{"path":[]},{"path":"https://rainer-rq-koelle.github.io/pru3di/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rainer Koelle. Author, maintainer.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koelle R (2023). pru3di: opinionated hack implement Borealis use-case study 3Di. https://github.com/rainer-rq-koelle/pru3di, https://rainer-rq-koelle.github.io/pru3di/.","code":"@Manual{,   title = {pru3di: An opinionated hack to implement the Borealis use-case study on 3Di},   author = {Rainer Koelle},   year = {2023},   note = {https://github.com/rainer-rq-koelle/pru3di, https://rainer-rq-koelle.github.io/pru3di/}, }"},{"path":"https://rainer-rq-koelle.github.io/pru3di/index.html","id":"pru3di","dir":"","previous_headings":"","what":"An opinionated hack to implement the Borealis use-case study on 3Di","title":"An opinionated hack to implement the Borealis use-case study on 3Di","text":"learning--project. goal explore workflow practices develop, refine, document, share R package. use case 3Di algorithm. 3Di composite score combining inefficiencies observed horizontal vertical flight phase.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An opinionated hack to implement the Borealis use-case study on 3Di","text":"can install development version pru3di GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"rainer-rq-koelle/pru3di\")"},{"path":"https://rainer-rq-koelle.github.io/pru3di/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An opinionated hack to implement the Borealis use-case study on 3Di","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(pru3di) ## basic example code # the following will greet you xhello(\"Stranger\") #> [1] \"Greetings Stranger\" summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/eidw_egll.html","id":null,"dir":"Reference","previous_headings":"","what":"4D state vectors for flights between EIDW-EGLL — eidw_egll","title":"4D state vectors for flights between EIDW-EGLL — eidw_egll","text":"subset data extracted period 2023 OSN using traffic-library. data subset FLTID & 4D.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/eidw_egll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"4D state vectors for flights between EIDW-EGLL — eidw_egll","text":"","code":"eidw_egll"},{"path":[]},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/eidw_egll.html","id":"traffic-state-vector","dir":"Reference","previous_headings":"","what":"traffic state vector","title":"4D state vectors for flights between EIDW-EGLL — eidw_egll","text":"data frame 655693 rows 6 columns: callsign flight identification icao24 ModeS airframe address timestamp date time position report altitude reported altitude ft (traffic lib converts m ft) latitude latitude pasition longitude longitude position","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/eidw_egll.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"4D state vectors for flights between EIDW-EGLL — eidw_egll","text":"PRU internal dataset, http unknown","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/essa_ekch.html","id":null,"dir":"Reference","previous_headings":"","what":"4D state vectors for flights between ESSA-EKCH — essa_ekch","title":"4D state vectors for flights between ESSA-EKCH — essa_ekch","text":"subset data extracted period 2023 OSN using traffic-library. data subset FLTID & 4D.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/essa_ekch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"4D state vectors for flights between ESSA-EKCH — essa_ekch","text":"","code":"essa_ekch"},{"path":[]},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/essa_ekch.html","id":"traffic-state-vector","dir":"Reference","previous_headings":"","what":"traffic state vector","title":"4D state vectors for flights between ESSA-EKCH — essa_ekch","text":"data frame 390788 rows 6 columns: callsign flight identification icao24 ModeS airframe address timestamp date time position report altitude reported altitude ft (traffic lib converts m ft) latitude latitude pasition longitude longitude position","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/essa_ekch.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"4D state vectors for flights between ESSA-EKCH — essa_ekch","text":"PRU internal dataset, http unknown","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/identify_trajectory_legs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify legs / gaps in a trajectory — identify_trajectory_legs","title":"Identify legs / gaps in a trajectory — identify_trajectory_legs","text":"Label legs (segments) trajectory (time ordered sequence ICAO24 addresses). Add colum identify leg.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/identify_trajectory_legs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify legs / gaps in a trajectory — identify_trajectory_legs","text":"","code":"identify_trajectory_legs(.trjs, .grp_var = .data$ICAO24, .max_gap = 3)"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/identify_trajectory_legs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify legs / gaps in a trajectory — identify_trajectory_legs","text":".trjs tibble/dataframe state vectors (flight identification 4D) .grp_var variable .trjs used separate/group flights, defaults ICAO24 .max_gap minutes; defaults 3 minutes (e.g. low approach)","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/identify_trajectory_legs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify legs / gaps in a trajectory — identify_trajectory_legs","text":"augmented state vector tibble","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/identify_trajectory_legs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify legs / gaps in a trajectory — identify_trajectory_legs","text":"","code":"if (FALSE) { state_vectors |> identify_trajectory_legs() }"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/make_uid.html","id":null,"dir":"Reference","previous_headings":"","what":"assign an UID for the study by attributing ICAO24 and LEG — make_uid","title":"assign an UID for the study by attributing ICAO24 and LEG — make_uid","text":"difference successive trajectory points given. ==> identify legs. assumed variable LEG included.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/make_uid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign an UID for the study by attributing ICAO24 and LEG — make_uid","text":"","code":"make_uid(.trjs_with_legs)"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/make_uid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign an UID for the study by attributing ICAO24 and LEG — make_uid","text":".trjs_with_legs state vector tibble LEG identification","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/make_uid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign an UID for the study by attributing ICAO24 and LEG — make_uid","text":"tibble trajectory points appended UID commentary trouble shooting.","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/make_uid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"assign an UID for the study by attributing ICAO24 and LEG — make_uid","text":"","code":"if (FALSE) legged_svs |> make_uid()"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/pru3di-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pru3di: An opinionated hack to implement the Borealis use-case study on 3Di — pru3di-package","title":"pru3di: An opinionated hack to implement the Borealis use-case study on 3Di — pru3di-package","text":"opinionated implementation 3Di algorithm. use case serves also allow explore development (workflow) R packages. work--progress ultimately transferred useful stable version.","code":""},{"path":[]},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/pru3di-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pru3di: An opinionated hack to implement the Borealis use-case study on 3Di — pru3di-package","text":"Maintainer: Rainer Koelle rainer.koelle@eurocontrol.int (ORCID)","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/standardise_traj_from_trafficlib.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise trajectory state vectors from traffic library. — standardise_traj_from_trafficlib","title":"Standardise trajectory state vectors from traffic library. — standardise_traj_from_trafficlib","text":"Ensure consistent naming conventions data types","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/standardise_traj_from_trafficlib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise trajectory state vectors from traffic library. — standardise_traj_from_trafficlib","text":"","code":"standardise_traj_from_trafficlib(.svs_tfclib)"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/standardise_traj_from_trafficlib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise trajectory state vectors from traffic library. — standardise_traj_from_trafficlib","text":".svs_tfclib tibble state vectors flights","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/standardise_traj_from_trafficlib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise trajectory state vectors from traffic library. — standardise_traj_from_trafficlib","text":"standard named tibble","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/standardise_traj_from_trafficlib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise trajectory state vectors from traffic library. — standardise_traj_from_trafficlib","text":"","code":"if (FALSE) { state_vector_sample |> standardise_traj_from_trafficlib() }"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/xhello.html","id":null,"dir":"Reference","previous_headings":"","what":"A friendly greeting for a person we know by name — xhello","title":"A friendly greeting for a person we know by name — xhello","text":"friendly greeting person know name","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/xhello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A friendly greeting for a person we know by name — xhello","text":"","code":"xhello(.name)"},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/xhello.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A friendly greeting for a person we know by name — xhello","text":".name name person want greet","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/xhello.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A friendly greeting for a person we know by name — xhello","text":"string comprising \"Greeting + name provided","code":""},{"path":"https://rainer-rq-koelle.github.io/pru3di/reference/xhello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A friendly greeting for a person we know by name — xhello","text":"","code":"xhello(\"Stranger\") #> [1] \"Greetings Stranger\""}]
